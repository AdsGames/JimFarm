name: Build Web

on:
  push:
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build-web:
    name: Build Web
    runs-on: ubuntu-latest

    env:
      EM_VERSION: "latest"
      EM_CACHE_FOLDER: "emsdk-cache"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Build
        run: |
          emcmake cmake -G "Unix Makefiles" .
          emmake make -j4

      - name: Get the version
        id: get_version
        run: echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      # - name: Deploy to A.D.S. Games
      #   uses: adsgames/deploy-to-adsgames@v1
      #   with:
      #     project-id: jimfarm
      #     version: ${{ steps.get_version.outputs.version }}
      #     build-dir: export/html5/bin
      #     platform: WEB
      #     bucket-access-key: ${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
      #     bucket-secret-key: ${{ secrets.LINODE_BUCKET_SECRET_KEY }}
      #     api-key: ${{ secrets.ADSGAMES_API_KEY }}

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Libraries
        run: |
          sudo apt update
          sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-mixer-dev libsdl2-gfx-dev

      - name: Build
        run: |
          cmake -G "Unix Makefiles" .
          make -j4

      - name: Get the version
        id: get_version
        run: echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      # - name: Deploy to A.D.S. Games
      #   uses: adsgames/deploy-to-adsgames@v1
      #   with:
      #     project-id: jimfarm
      #     version: ${{ steps.get_version.outputs.version }}
      #     build-dir: build/
      #     platform: LINUX
      #     bucket-access-key: ${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
      #     bucket-secret-key: ${{ secrets.LINODE_BUCKET_SECRET_KEY }}
      #     api-key: ${{ secrets.ADSGAMES_API_KEY }}

  build-mac:
    name: Build Mac OS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Libraries
        run: |
          brew install sdl2 sdl2_image sdl2_gfx sdl2_ttf sdl2_mixer

      - name: Build
        run: |
          cmake -G "Unix Makefiles" .
          export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/usr/local/include"
          make -j4

      - name: Get the version
        id: get_version
        run: echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      # - name: Deploy to A.D.S. Games
      #   uses: adsgames/deploy-to-adsgames@v1
      #   with:
      #     project-id: jimfarm
      #     version: ${{ steps.get_version.outputs.version }}
      #     build-dir: build/
      #     platform: MAC
      #     bucket-access-key: ${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
      #     bucket-secret-key: ${{ secrets.LINODE_BUCKET_SECRET_KEY }}
      #     api-key: ${{ secrets.ADSGAMES_API_KEY }}

  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Libraries
        run: |
          Set-Item -Path Env:Path -Value ("C:/msys64/usr/bin;" + $Env:Path)
          pacman --noconfirm -S mingw-w64-i686-gcc-libs mingw-w64-i686-SDL2 mingw-w64-i686-SDL2_mixer mingw-w64-i686-SDL2_image mingw-w64-i686-SDL2_ttf mingw-w64-i686-SDL2_gfx

      - name: Build
        run: |
          Set-Item -Path Env:Path -Value ("C:/msys64/mingw32/bin;" + $Env:Path)
          cmake -G "MSYS Makefiles" .
          Set-Item -Path Env:Path -Value ("C:/msys64/mingw32/bin;" + $Env:Path)
          make -j4

      - name: Get the version
        id: get_version
        run: echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      # - name: Deploy to A.D.S. Games
      #   uses: adsgames/deploy-to-adsgames@v1
      #   with:
      #     project-id: jimfarm
      #     version: ${{ steps.get_version.outputs.version }}
      #     build-dir: build/
      #     platform: WINDOWS
      #     bucket-access-key: ${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
      #     bucket-secret-key: ${{ secrets.LINODE_BUCKET_SECRET_KEY }}
      #     api-key: ${{ secrets.ADSGAMES_API_KEY }}
